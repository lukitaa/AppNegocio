/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package negocio.Forms;

import java.awt.Frame;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import negocio.Controladoras.ControladoraProductos;
import negocio.Controladoras.StorageException;
import negocio.Entidades.Productos;

/**
 *
 * @author usuario
 */
public class VistaStocks extends javax.swing.JDialog {

    Frame framePrincipal = null;
    /**
     * Creates new form VistaStocks
     */
    public VistaStocks(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.setLocationRelativeTo(parent);
        initComponents();
        //Tener al Frame padre guardado para usar.
        framePrincipal = parent;
        //Seteo de los valores de las filas de la tabla en el centro
        DefaultTableCellRenderer renderer = new DefaultTableCellRenderer();
        renderer.setHorizontalAlignment(DefaultTableCellRenderer.CENTER);
        for (int i=0; i<form_tablaProductos.getColumnCount();i++){
            form_tablaProductos.setDefaultRenderer(form_tablaProductos.getColumnClass(i),renderer);
        }
        //Seteo de los valores de las cabezeras de la tabla en el centro
        DefaultTableCellRenderer renderer2 = (DefaultTableCellRenderer) form_tablaProductos.getTableHeader().getDefaultRenderer();
        renderer2.setHorizontalAlignment(DefaultTableCellRenderer.CENTER);
    }

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        form_tablaProductos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        form_comboProductos = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        form_tablaProductos.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        form_tablaProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Producto", "Producto", "Stock", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(form_tablaProductos);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Vista de los stocks de los productos");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel2.setText("Buscar producto:");

        form_comboProductos.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        form_comboProductos.setToolTipText("<html>\n\t<strong>Filtrar los stocks segun el producto elegido.</strong>\n</html>");
        form_comboProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                form_comboProductosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(4, 4, 4)
                        .addComponent(form_comboProductos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(form_comboProductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        refreshDataTable("Seleccionar...");
        completarCombo();
    }//GEN-LAST:event_formWindowGainedFocus

    //Evento que se ejecuta cuando se modifica el elemento seleccionado del combo
    private void form_comboProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_form_comboProductosActionPerformed
        refreshDataTable((String) form_comboProductos.getSelectedItem());
    }//GEN-LAST:event_form_comboProductosActionPerformed

    //Funcion para actualizar los valores mostrados en la tabla.
    public void refreshDataTable(String producto){
        DefaultTableModel modelo = (DefaultTableModel) form_tablaProductos.getModel();        
        //Borrar los valores que ya existen, para no repetirlos en la tabla.
        if (modelo.getRowCount() > 0) {
            for (int i = modelo.getRowCount() - 1; i > -1; i--) {
                modelo.removeRow(i);
            }
        }
        List<Productos> prod = null;
        try {
            prod = ControladoraProductos.getProductos();
        } catch (StorageException ex) {
            Logger.getLogger(VistaProveedores.class.getName()).log(Level.SEVERE, null, ex);
        }
        //Si no se selecciono ningun producto mostrar todos, caso contrario, mostrar el seleccionado.
        if(producto.equals("Seleccionar...")){
            //Volver a imprimir todos los datos en la tabla.
            agregarDataEnTabla(modelo,prod,true,"");
        }
        else{
            //Imprimir los datos del producto seleccionado en la tabla.
            agregarDataEnTabla(modelo,prod,false,producto);
        }
        form_tablaProductos.setModel(modelo);
    }

    //Funcion agregar los datos a data a agregar a la tabla.
    //PARAMETROS: - modelo: La tabla a modificar | - listaProd: La lista con todos los productos.
    //PARAMETROS: - todos: Hay que mostrar todos o el seleccionado? | - productoAMostrar: el nombre del producto a mostrar
    public void agregarDataEnTabla(DefaultTableModel modelo,List<Productos> listaProd, boolean todos,String productoAMostrar){
        String[] data = new String[4];
        if(todos){
            for(Productos p : listaProd){
                data[0] = p.getIdProducto().toString();
                data[1] = p.getProducto();
                data[2] = String.valueOf(p.getStock());
                data[3] = "$" + String.valueOf(p.getPrecio());
                modelo.addRow(data);
            }
        }
        else{
            for(Productos p : listaProd){
                if(p.getProducto().equals(productoAMostrar)){
                    data[0] = p.getIdProducto().toString();
                    data[1] = p.getProducto();
                    data[2] = String.valueOf(p.getStock());
                    data[3] = "$" + String.valueOf(p.getPrecio());
                    modelo.addRow(data);
                }
            }   
        }
    }
    
    //Funcion para rellenar el combobox de proveedores.
    public void completarCombo(){
        List<Productos> prod = null;
        form_comboProductos.addItem("Seleccionar...");
        try {
            prod = ControladoraProductos.getProductos();
            for(Productos p : prod){
                form_comboProductos.addItem(p.getProducto());
            }
        } catch (StorageException ex) {
            Logger.getLogger(ModificarProducto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaStocks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaStocks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaStocks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaStocks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VistaStocks dialog = new VistaStocks(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox form_comboProductos;
    private javax.swing.JTable form_tablaProductos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
